import type { AppCharacter, DefaultAppCharacter } from "@Src/types";
import { Dendro, Green, Rose } from "@Src/pure-components";
import { EModAffect } from "@Src/constants";
import { EModSrc, MEDIUM_PAs } from "../constants";
import { applyModifier, makeModApplier } from "@Src/utils/calculation";
import { checkAscs, checkCons, talentBuff } from "../utils";

const Alhaitham: DefaultAppCharacter = {
  code: 65,
  name: "Alhaitham",
  icon: "2/2c/Alhaitham_Icon",
  sideIcon: "c/cb/Alhaitham_Side_Icon",
  rarity: 5,
  nation: "sumeru",
  vision: "dendro",
  weaponType: "sword",
  EBcost: 70,
  innateBuffs: [
    {
      src: EModSrc.A4,
      desc: () => (
        <>
          Each point of Alhaitham's Elemental Mastery will increase the <Green>Projection Attacks DMG</Green> [~ES] and
          Particular Field: Fetters of Phenomena <Green>[EB] DMG</Green> by <Green b>0.1%</Green>. Max <Rose>100%</Rose>
          .
        </>
      ),
      isGranted: checkAscs[4],
      applyBuff: ({ totalAttr, attPattBonus, calcItemBonuses, desc, tracker }) => {
        const buffValue = Math.min(totalAttr.em * 0.1, 100);
        applyModifier(desc, attPattBonus, "EB.pct_", buffValue, tracker);

        calcItemBonuses.push({
          ids: "ES.0",
          bonus: talentBuff([true, "pct_", [true, 4], buffValue]),
        });
      },
    },
  ],
  buffs: [
    {
      index: 0,
      src: "Chisel-Light Mirrors",
      affect: EModAffect.SELF,
      desc: () => (
        <>
          When he possesses Chisel-Light Mirrors, Alhaitham gains <Dendro>Dendro Infusion</Dendro>.
        </>
      ),
      infuseConfig: {
        overwritable: false,
      },
    },
    {
      index: 2,
      src: EModSrc.C2,
      affect: EModAffect.SELF,
      desc: () => (
        <>
          When Alhaitham generates a Chisel-Light Mirror, his <Green>Elemental Mastery</Green> will be increased by{" "}
          <Green b>50</Green> for 8 seconds, max <Rose>4</Rose> stacks.
        </>
      ),
      isGranted: checkCons[2],
      inputConfigs: [
        {
          type: "stacks",
          max: 4,
        },
      ],
      applyBuff: ({ totalAttr, inputs, desc, tracker }) => {
        applyModifier(desc, totalAttr, "em", (inputs[0] || 0) * 50, tracker);
      },
    },
    {
      index: 3,
      src: EModSrc.C4,
      affect: EModAffect.PARTY,
      desc: () => (
        <>
          Buff based on the number of Chisel-Light Mirrors consumed and generated by Particular Field: Fetters of
          Phenomena [EB]:
          <br />• Each Mirror consumed will increase the <Green>Elemental Mastery</Green> of all other nearby party
          members by <Green b>30</Green> for 15s.
          <br />• Each Mirror generated will grant Alhaitham a <Green b>10%</Green> <Green>Dendro DMG Bonus</Green> for
          15s.
        </>
      ),
      isGranted: checkCons[4],
      inputConfigs: [
        {
          label: "Consumed Mirrors",
          type: "select",
          initialValue: 0,
          max: 3,
        },
      ],
      applyBuff: ({ toSelf, totalAttr, inputs, desc, tracker }) => {
        const stacks = inputs[0] || 0;

        if (toSelf) {
          applyModifier(desc, totalAttr, "dendro", (3 - stacks) * 10, tracker);
        } else {
          applyModifier(desc, totalAttr, "em", stacks * 30, tracker);
        }
      },
    },
    {
      index: 4,
      src: EModSrc.C6,
      affect: EModAffect.SELF,
      desc: () => (
        <>
          If Alhaitham generates Chisel-Light Mirrors when their numbers have already maxed out, his{" "}
          <Green>CRIT Rate</Green> and <Green>CRIT DMG</Green> will increase by <Green b>10%</Green> and{" "}
          <Green b>70%</Green> respectively for 6s.
        </>
      ),
      isGranted: checkCons[6],
      applyBuff: makeModApplier("totalAttr", ["cRate_", "cDmg_"], [10, 70]),
    },
  ],
};

export default Alhaitham as AppCharacter;
